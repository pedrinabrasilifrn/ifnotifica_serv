# Generated by Django 4.1.4 on 2023-09-05 16:25

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estrategia_atendimento', models.CharField(choices=[('DIAGNOSTICO_SINTOMATICO', 'Diagnóstico assistencial'), ('BUSCA_ATIVA_ASSINTOMATICO', 'Busca ativa de assintomático'), ('TRIAGEM_POPULACAO_ESPECIFICA', 'Triagem de população específica')], max_length=128)),
                ('data_cadastro', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(datetime.date.today)])),
            ],
            options={
                'verbose_name': 'Atendimento',
                'verbose_name_plural': 'Atendimentos',
            },
        ),
        migrations.CreateModel(
            name='Bairro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Bairro')),
            ],
            options={
                'verbose_name': 'Bairro',
                'verbose_name_plural': 'Bairros',
            },
        ),
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Cidade')),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=255, verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Cidade',
                'verbose_name_plural': 'Cidades',
            },
        ),
        migrations.CreateModel(
            name='UnidadeBasica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=128, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Unidade basica')),
                ('cidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.cidade')),
            ],
            options={
                'verbose_name': 'UBS',
                'verbose_name_plural': 'UBS´s',
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[django.core.validators.MinLengthValidator(11)])),
                ('cbo', models.CharField(blank=True, max_length=15, validators=[django.core.validators.MinLengthValidator(4)])),
                ('nome', models.CharField(max_length=128, validators=[django.core.validators.MinLengthValidator(12)])),
                ('data_nascimento', models.DateField(validators=[django.core.validators.MaxValueValidator(datetime.date.today)])),
                ('sexo', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino')], max_length=10)),
                ('cor', models.CharField(choices=[('BRAN', 'Branco'), ('PARD', 'Pardo'), ('AMARELO', 'Amarelo'), ('PRETO', 'Preto'), ('INDIGINA', 'Indígina'), ('IGNORADO', 'Ignorado')], max_length=20)),
                ('tradicionalidade', models.BooleanField(default=False)),
                ('cep', models.CharField(max_length=8, validators=[django.core.validators.MinLengthValidator(7)])),
                ('logradouro', models.CharField(blank=True, max_length=128)),
                ('numero', models.CharField(blank=True, max_length=10, validators=[django.core.validators.MinLengthValidator(1)])),
                ('complemento', models.CharField(blank=True, max_length=128)),
                ('telefone1', models.CharField(max_length=15, validators=[django.core.validators.MinLengthValidator(9)])),
                ('telefone2', models.CharField(blank=True, max_length=15, validators=[django.core.validators.MinLengthValidator(9)])),
                ('email', models.EmailField(max_length=128)),
                ('data_cadastro', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(datetime.date.today)])),
                ('bairro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.bairro')),
                ('cidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.cidade')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.CreateModel(
            name='Notificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_notificacao', models.DateField(default=datetime.date.today)),
                ('tipo_teste', models.CharField(choices=[('RT-QCPR', 'Teste molecular em tempo real - RT-PCR'), ('RT-LAMP', 'Teste molecular de amplianção isotermica - RT-LAMP'), ('ANTIGENO', 'Teste rapido com Aitígeno')], max_length=128)),
                ('estado_teste', models.CharField(choices=[('SOLICITADO', 'Teste solicitado'), ('COLETADO', 'Teste coletado'), ('CONCLUIDO', 'Teste concluido'), ('NAO_SOLICITADO', 'Teste não solicitado')], max_length=128)),
                ('resultado', models.CharField(choices=[('REAGENTE', 'Resultado positivo'), ('NAO_REAGENTE', 'Resultado negativo'), ('INDETERMINADO', 'Resultado indeterminado')], max_length=128)),
                ('assintomatico', models.BooleanField(default=False)),
                ('sintomas', multiselectfield.db.fields.MultiSelectField(choices=[('CORIZA', 'Coriza'), ('FEBRE', 'Febre'), ('DOR_DE_CABECA', 'Dor de cabeça'), ('DOR_GARGANTA', 'Dor de garganta'), ('DISTURBIOS_GUSTATIVOS', 'Distúrbios gustativos'), ('DISPNEIA', 'Dispneia'), ('DISTURBIOS_OLFATIVOS', 'Distúrbios olfativos'), ('TOSSE', 'Tosse'), ('OUTROS', 'Outros')], max_length=500, null=True, verbose_name='Sintomas')),
                ('condicoes_especiais', multiselectfield.db.fields.MultiSelectField(choices=[('DOENCA_RESPIRATORIA', 'Doenças respiratória crônica'), ('DOENCA_RENAL', 'Doenças renal crônica em estagio avançado'), ('DOENCA_CROMOSSOMICA', 'Doenças cromossômicas ou estado de fragilidade imunológica'), ('DOENCA_CARDIOVASCULAR', 'Doença cardíacas crônicas'), ('DOENCA_PUERPERA', 'Puérpera (até 45 dias do parto)'), ('IMUNOSSUPRESSAO', 'Imunossupressão'), ('DIABETES', 'Diabetes'), ('GESTANTE', 'Gestante'), ('OBESIDADE', 'Obesidade'), ('OUTROS', 'Outros')], max_length=500, null=True, verbose_name='Condições Especiais')),
                ('data_cadastro', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(datetime.date.today)])),
                ('data_envio', models.DateField(validators=[django.core.validators.MaxValueValidator(datetime.date.today)])),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.atendimento')),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
            },
        ),
        migrations.AddField(
            model_name='bairro',
            name='cidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.cidade'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='local',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.unidadebasica'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.paciente'),
        ),
    ]
